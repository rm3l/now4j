//Copyright (c) 2017 Armel Soro
//
//Permission is hereby granted, free of charge, to any person obtaining a copy
//of this software and associated documentation files (the "Software"), to deal
//in the Software without restriction, including without limitation the rights
//to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//copies of the Software, and to permit persons to whom the Software is
//furnished to do so, subject to the following conditions:
//The above copyright notice and this permission notice shall be included in all
//copies or substantial portions of the Software.
//
//THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
//SOFTWARE.

description 'Java CLI for the Now API. Uses now4j library.'

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/java')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

dependencies {
    compile project(':now4j')
    compile 'com.google.code.gson:gson:2.8.6'
    compile 'com.beust:jcommander:1.72'
}

//create a single Jar with all dependencies
jar {
    manifest {
        attributes (
                'Implementation-Title': project.name,
                'Implementation-Version': version,
                'Main-Class': 'org.rm3l.now4j.cli.Now'
        )
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

task integrationTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
}

/*
 * Ensure that the HTML reports of unit and integration tests are
 * created to different report directories
 */
tasks.withType(Test) {
    reports.html.destination = file("${reporting.baseDir}/${name}")
}

/*
 * Ensure that integration tests are run before the check task
 * and that the check task fails the build if there are failing integration tests.
 */
check.dependsOn integrationTest

/*
 * Ensure that unit tests are run before integration tests.
 * This guarantees that unit tests are run even if integration tests fails.
 */
integrationTest.mustRunAfter test

final Closure bintrayConfig = rootProject.getBintrayConfig(
        'now4j-cli',
        ['now', 'java', 'cli'],
        description)
bintray bintrayConfig
